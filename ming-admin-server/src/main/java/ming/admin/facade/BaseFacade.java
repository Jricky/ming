package ming.admin.facade;import ming.admin.vo.base.QueryReq;import ming.admin.vo.base.QueryRes;import ming.admin.vo.base.TransReq;import ming.admin.vo.base.TransRes;import ming.framework.constant.errcode.ErrorCodeSys;import ming.framework.core.service.ErrCodeService;import ming.framework.util.ReflectUtil;import ming.framework.util.TimeProvider;import javax.annotation.Resource;public abstract class BaseFacade {	@Resource	private TimeProvider timeProvider;	@Resource	private ErrCodeService errCodeService;	protected TransRes buildRes(TransReq req) {		TransRes res = new TransRes();		ReflectUtil.copy(req, res);		res.setResultCode(ErrorCodeSys.SUCCESS.toString());		res.setMessage(errCodeService.formatMessage(res.getResultCode()));		res.setTimestamp(timeProvider.getCurrentTime());		return res;	}	protected <T> TransRes buildRes(TransReq req,T obj) {		TransRes res = new TransRes();		ReflectUtil.copy(req, res);		res.setBody(obj);		res.setResultCode(ErrorCodeSys.SUCCESS.toString());		res.setMessage(errCodeService.formatMessage(res.getResultCode()));		res.setTimestamp(timeProvider.getCurrentTime());		return res;	}	protected QueryRes buildRes(QueryReq req) {		QueryRes res = new QueryRes();		ReflectUtil.copy(req, res);		res.setResultCode(ErrorCodeSys.SUCCESS.toString());		res.setMessage(errCodeService.formatMessage(res.getResultCode()));		res.setTimestamp(timeProvider.getCurrentTime());		return res;	}	protected <T> QueryRes buildRes(QueryReq req,T obj) {		QueryRes res = new QueryRes();		ReflectUtil.copy(req, res);		res.setBody(obj);		res.setResultCode(ErrorCodeSys.SUCCESS.toString());		res.setMessage(errCodeService.formatMessage(res.getResultCode()));		res.setTimestamp(timeProvider.getCurrentTime());		return res;	}}